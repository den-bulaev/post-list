{"version":3,"sources":["Api/requests.js","Api/posts.js","components/PostList/PostList.jsx","components/Comments/Comments.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["request","endPoint","options","fetch","then","response","ok","Error","status","statusText","json","download","endpoint","method","getPosts","deletePost","postId","PostList","setSelectedPostId","selectedPostId","useState","posts","setPosts","reRender","setReRender","useEffect","handleClickOpen","event","id","target","dataset","handleClickClose","onDelete","a","result","className","map","title","data-post-id","type","onClick","debounce","React","memo","Comments","comments","body","defaultProps","PostDetails","post","setPost","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72bd7d88.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nconst BASE_URL = 'https://bloggy-api.herokuapp.com/';\n\nexport const request = (endPoint, options) => {\n  const url = BASE_URL + endPoint;\n\n  return fetch(url, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const remove = (endpoint) => {\n  const method = { method: 'DELETE' };\n\n  return request(endpoint, method);\n};\n\nexport const download = (endpoint) => {\n  const method = { method: 'GET' };\n\n  return request(endpoint, method);\n};\n\nexport const add = (endpoint, options) => request(endpoint, options);\n","/* eslint-disable import/prefer-default-export */\nimport { remove, download, add } from './requests';\n\nexport const getPosts = () => download('posts');\n\nexport const getPost = (id) => download(`posts/${id}?_embed=comments`);\n\nexport const deletePost = (postId) => {\n  remove(`posts/${postId}`);\n};\n\nexport const addPost = () => {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      title: 'azazazazazazaza',\n      body: 'akj;qwerewq; jfip',\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  };\n\n  return add('posts', options);\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\n\nimport { deletePost, getPosts } from '../../Api/posts';\n\nimport './PostList.scss';\n\nconst PostList = ({\n  setSelectedPostId, selectedPostId,\n}) => {\n  const [posts, setPosts] = useState([]);\n  const [reRender, setReRender] = useState(false);\n\n  useEffect(() => {\n    getPosts()\n      .then((response) => setPosts(response));\n  }, [reRender]);\n\n  const handleClickOpen = (event) => {\n    const id = event.target.dataset.postId;\n\n    setSelectedPostId(+id);\n  };\n\n  const handleClickClose = () => {\n    setSelectedPostId(0);\n  };\n\n  const onDelete = async (event) => {\n    await deletePost(event.target.dataset.postId);\n    await getPosts()\n      .then((result) => setPosts(result));\n\n    setReRender(!reRender);\n  };\n\n  const debouncedDelete = () => debounce(onDelete, 500);\n\n  return (\n    <ul className=\"list\">\n      {posts.map(({ id, title }) => (\n        <li\n          className=\"list__item\"\n          key={id}\n        >\n          <h2>\n            {title}\n          </h2>\n\n          <div className=\"list__buttons-container\">\n            <button\n              data-post-id={id}\n              className=\"list__button\"\n              type=\"button\"\n              onClick={id === selectedPostId ? handleClickClose : handleClickOpen}\n            >\n              {id === selectedPostId ? 'close' : 'open'}\n            </button>\n\n            <button\n              data-post-id={id}\n              className=\"list__button list__delete\"\n              type=\"button\"\n              onClick={debouncedDelete()}\n            >\n              delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPostList.propTypes = {\n  setSelectedPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n\nexport default React.memo(PostList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comments = ({ comments }) => (\n  <>\n    <h3>Comments:</h3>\n    <ul className=\"comments\">\n      {comments.map(({ id, body }) => (\n        <li key={id}>\n          <p>{body}</p>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nComments.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    postId: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n  })),\n};\n\nComments.defaultProps = {\n  comments: [],\n};\n\nexport default React.memo(Comments);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getPost } from '../../Api/posts';\nimport Comments from '../Comments/Comments';\n\nconst PostDetails = ({ postId }) => {\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    getPost(postId)\n      .then((result) => setPost(result));\n  }, []);\n\n  return post && (\n    <div className=\"post\">\n      <h2 className=\"post__title\">\n        {post.title}\n      </h2>\n\n      <p className=\"post__body\">\n        {post.body}\n      </p>\n\n      <Comments comments={post.comments} />\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n\nexport default React.memo(PostDetails);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\n\nimport PostList from './components/PostList/PostList';\nimport PostDetails from './components/PostDetails/PostDetails';\n\nimport './App.scss';\n\nfunction App() {\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  return (\n    <>\n      <header className=\"App__header\">\n        <h1 className=\"App__title\">Posts List</h1>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostList\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__details\">\n          {!!selectedPostId && (\n            <PostDetails postId={selectedPostId} />\n          )}\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}