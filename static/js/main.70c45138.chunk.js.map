{"version":3,"sources":["Api/request.js","components/PostList/PostList.jsx","App.jsx","index.js"],"names":["request","endPoint","options","fetch","then","response","json","PostList","posts","setSelectedPostId","handleClickOpen","event","target","dataset","postid","className","map","id","title","data-post-id","type","onClick","defaultProps","React","memo","App","useState","setPosts","selectedPostId","useEffect","method","ReactDOM","render","document","getElementById"],"mappings":"oPASeA,EAPC,SAACC,EAAUC,GAGzB,OAAOC,MALQ,oCAGQF,EAELC,GACfE,MAAK,SAACC,GAAD,OAAcA,EAASC,W,eCD3BC,EAAW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,kBACnBC,EAAkB,SAACC,GACvBF,EAAkBE,EAAMC,OAAOC,QAAQC,SAGzC,OACE,oBAAIC,UAAU,OAAd,SACGP,EAAMQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,qBACEH,UAAU,aADZ,UAIE,6BACGG,IAGH,wBACEC,eAAcF,EACdF,UAAU,oBACVK,KAAK,SACLC,QAASX,EAJX,oBANKO,SA6BfV,EAASe,aAAe,CACtBd,MAAO,IAGMe,UAAMC,KAAKjB,G,sBCPXkB,MAhCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcmB,EAAd,KACA,EAA4CD,mBAAS,MAArD,mBAAOE,EAAP,KAAuBnB,EAAvB,KASA,OAPAoB,qBAAU,WAGR7B,EAAQ,QAFQ,CAAE8B,OAAQ,QAGvB1B,MAAK,SAACC,GAAD,OAAcsB,EAAStB,QAC9B,IAGD,qCACE,wBAAQU,UAAU,cAAlB,SACE,oBAAIA,UAAU,mBAAd,0BAGF,uBAAMA,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAUP,MAAOA,EAAOC,kBAAmBA,MAG7C,qBAAKM,UAAU,eAAf,WACKa,GACD,cAAC,IAAD,CAAaA,eAAgBA,aC1BzCG,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.70c45138.chunk.js","sourcesContent":["const BASE_URL = 'https://bloggy-api.herokuapp.com/';\n\nconst request = (endPoint, options) => {\n  const url = BASE_URL + endPoint;\n\n  return fetch(url, options)\n    .then((response) => response.json());\n};\n\nexport default request;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostList.scss';\n\nconst PostList = ({ posts, setSelectedPostId }) => {\n  const handleClickOpen = (event) => {\n    setSelectedPostId(event.target.dataset.postid);\n  };\n\n  return (\n    <ul className=\"list\">\n      {posts.map(({ id, title }) => (\n        <li\n          className=\"list__item\"\n          key={id}\n        >\n          <h2>\n            {title}\n          </h2>\n\n          <button\n            data-post-id={id}\n            className=\"list__open-button\"\n            type=\"button\"\n            onClick={handleClickOpen}\n          >\n            open\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  })),\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n\nPostList.defaultProps = {\n  posts: [],\n};\n\nexport default React.memo(PostList);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\n\nimport request from './Api/request';\nimport PostList from './components/PostList/PostList';\nimport PostDetails from './components/PostDetails/PostDetails';\n\nimport './App.scss';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n\n  useEffect(() => {\n    const options = { method: 'GET' };\n\n    request('posts', options)\n      .then((response) => setPosts(response));\n  }, []);\n\n  return (\n    <>\n      <header className=\"App__header\">\n        <h1 className=\"App__header-text\">Posts List</h1>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostList posts={posts} setSelectedPostId={setSelectedPostId} />\n        </div>\n\n        <div className=\"App__details\">\n          {!!selectedPostId && (\n            <PostDetails selectedPostId={selectedPostId} />\n          )}\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}