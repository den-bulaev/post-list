{"version":3,"sources":["Api/requests.js","Api/posts.js","components/PostList/PostList.jsx","components/Comments/Comments.jsx","components/PostDetails/PostDetails.jsx","components/NewPost/NewPost.jsx","App.jsx","index.js"],"names":["request","endPoint","options","fetch","then","response","ok","Error","status","statusText","json","download","endpoint","method","getPosts","deletePost","postId","addPost","add","PostList","setSelectedPostId","selectedPostId","posts","setPosts","handleClickOpen","event","id","target","dataset","handleClickClose","onDelete","a","result","className","map","title","data-post-id","type","onClick","debounce","defaultProps","React","memo","Comments","comments","length","body","PostDetails","useState","post","setPost","useEffect","NewPost","setTitle","setBody","handleSubmit","preventDefault","JSON","stringify","headers","setData","fieldName","name","fieldValue","value","onSubmit","onChange","placeholder","required","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edc56ab4.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nconst BASE_URL = 'https://bloggy-api.herokuapp.com/';\n\nexport const request = (endPoint, options) => {\n  const url = BASE_URL + endPoint;\n\n  return fetch(url, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const remove = (endpoint) => {\n  const method = { method: 'DELETE' };\n\n  return request(endpoint, method);\n};\n\nexport const download = (endpoint) => {\n  const method = { method: 'GET' };\n\n  return request(endpoint, method);\n};\n\nexport const add = (endpoint, options) => request(endpoint, options);\n","/* eslint-disable import/prefer-default-export */\nimport { remove, download, add } from './requests';\n\nexport const getPosts = () => download('posts');\n\nexport const getPost = (id) => download(`posts/${id}?_embed=comments`);\n\nexport const deletePost = (postId) => {\n  remove(`posts/${postId}`);\n};\n\nexport const addPost = (options) => add('posts', options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\n\nimport { deletePost, getPosts } from '../../Api/posts';\n\nimport './PostList.scss';\n\nconst PostList = ({\n  setSelectedPostId, selectedPostId, posts, setPosts,\n}) => {\n  const handleClickOpen = (event) => {\n    const id = event.target.dataset.postId;\n\n    setSelectedPostId(+id);\n  };\n\n  const debouncedOpen = () => debounce(handleClickOpen, 300);\n\n  const handleClickClose = () => {\n    setSelectedPostId(0);\n  };\n\n  const debouncedClose = () => debounce(handleClickClose, 300);\n\n  const onDelete = async (event) => {\n    await deletePost(event.target.dataset.postId);\n    getPosts()\n      .then((result) => setPosts(result));\n  };\n\n  const debouncedDelete = () => debounce(onDelete, 300);\n\n  return (\n    <ul className=\"PostList\">\n      {posts.map(({ id, title }) => (\n        <li\n          className=\"PostList__item\"\n          key={id}\n        >\n          <h2>\n            {title}\n          </h2>\n\n          <div className=\"PostList__buttons-container\">\n            <button\n              data-post-id={id}\n              className=\"PostList__button\"\n              type=\"button\"\n              onClick={id === selectedPostId ? debouncedClose() : debouncedOpen()}\n            >\n              {id === selectedPostId ? 'close' : 'open'}\n            </button>\n\n            <button\n              data-post-id={id}\n              className=\"PostList__button PostList__delete\"\n              type=\"button\"\n              onClick={debouncedDelete()}\n            >\n              delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })),\n  setPosts: PropTypes.func.isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n\nPostList.defaultProps = {\n  posts: [],\n};\n\nexport default React.memo(PostList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comments = ({ comments }) => (\n  comments.length > 0 ? (\n    <>\n      <h3>Comments:</h3>\n      <ul className=\"comments\">\n        {comments.map(({ id, body }) => (\n          <li key={id}>\n            <p>{body}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  ) : (\n    <h3>There are no comments yet</h3>\n  )\n);\n\nComments.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    postId: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n  })),\n};\n\nComments.defaultProps = {\n  comments: [],\n};\n\nexport default React.memo(Comments);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getPost } from '../../Api/posts';\nimport Comments from '../Comments/Comments';\n\nconst PostDetails = ({ postId }) => {\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    getPost(postId)\n      .then((result) => setPost(result));\n  }, []);\n\n  return post && (\n    <div className=\"post\">\n      <h2 className=\"post__title\">\n        {post.title}\n      </h2>\n\n      <p className=\"post__body\">\n        {post.body}\n      </p>\n\n      <Comments comments={post.comments} />\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n\nexport default React.memo(PostDetails);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { addPost, getPosts } from '../../Api/posts';\n\nimport './NewPost.scss';\n\nconst NewPost = ({ setPosts }) => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const options = {\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n        body,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    };\n\n    await addPost(options);\n    getPosts()\n      .then((result) => setPosts(result));\n\n    setBody('');\n    setTitle('');\n  };\n\n  const setData = (event) => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n\n    switch (fieldName) {\n      case 'title':\n        setTitle(fieldValue);\n        break;\n\n      case 'body':\n        setBody(fieldValue);\n        break;\n\n      default:\n        throw new Error('Unexpected field name');\n    }\n  };\n\n  return (\n    <>\n      <h2 className=\"form-title\">Add new post</h2>\n\n      <form onSubmit={handleSubmit} className=\"NewPost\">\n        <input\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          onChange={setData}\n          placeholder=\"Enter post title\"\n          required\n        />\n        <input\n          name=\"body\"\n          type=\"text\"\n          value={body}\n          onChange={setData}\n          placeholder=\"Enter post body\"\n          required\n        />\n        <button\n          type=\"submit\"\n          className=\"NewPost__submit-button\"\n        >\n          Add\n        </button>\n      </form>\n    </>\n  );\n};\n\nNewPost.propTypes = {\n  setPosts: PropTypes.func.isRequired,\n};\n\nexport default React.memo(NewPost);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useEffect } from 'react';\n\nimport PostList from './components/PostList/PostList';\nimport PostDetails from './components/PostDetails/PostDetails';\nimport NewPost from './components/NewPost/NewPost';\nimport { getPosts } from './Api/posts';\n\nimport './App.scss';\n\nfunction App() {\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts()\n      .then((response) => setPosts(response));\n  }, []);\n\n  return (\n    <>\n      <header className=\"App__header\">\n        <h1 className=\"App__title\">Posts List</h1>\n      </header>\n\n      <main className=\"App__main\">\n        <section className=\"App__sidebar\">\n          <PostList\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            setPosts={setPosts}\n            posts={posts}\n          />\n        </section>\n\n        <section className=\"App__details\">\n          {!!selectedPostId && (\n            <PostDetails postId={selectedPostId} />\n          )}\n          <NewPost setPosts={setPosts} />\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}