{"version":3,"sources":["Api/request.js","components/PostList/PostList.jsx","Api/posts.js","components/Comments/Comments.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["request","endPoint","options","fetch","then","response","ok","Error","status","statusText","json","PostList","posts","setPost","useState","postId","setPostId","handleClickOpen","event","id","target","dataset","getPost","handleClickClose","className","map","title","data-post-id","type","onClick","defaultProps","React","memo","Comments","comments","body","PostDetails","App","setPosts","post","useEffect","method","getPosts","ReactDOM","render","document","getElementById"],"mappings":"4OAeeA,EAbC,SAACC,EAAUC,GAGzB,OAAOC,MALQ,oCAGQF,EAELC,GACfE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,W,eCJhBC,EAAW,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACzB,EAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAkB,SAACC,GACvB,IAAMC,EAAKD,EAAME,OAAOC,QAAQN,QCHb,SAACF,EAASM,GAC/BnB,EAAQ,SAAD,OAAUmB,EAAV,qBACJf,MAAK,SAACC,GACLQ,EAAQR,MDEViB,CAAQT,EAASM,GACjBH,EAAUG,IAGNI,EAAmB,WACvBV,EAAQ,MACRG,EAAU,IAGZ,OACE,oBAAIQ,UAAU,OAAd,SACGZ,EAAMa,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,MAAP,OACT,qBACEF,UAAU,aADZ,UAIE,6BACGE,IAGH,wBACEC,eAAcR,EACdK,UAAU,oBACVI,KAAK,SACLC,QAASV,KAAQJ,EAASQ,EAAmBN,EAJ/C,SAMGE,KAAQJ,EAAS,QAAU,WAZzBI,SA6BfR,EAASmB,aAAe,CACtBlB,MAAO,IAGMmB,UAAMC,KAAKrB,GEzDpBsB,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACf,qCACE,2CACA,oBAAIV,UAAU,WAAd,SACGU,EAAST,KAAI,gBAAGN,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAP,OACZ,6BACE,4BAAIA,KADGhB,YAgBjBc,EAASH,aAAe,CACtBI,SAAU,IAGGH,UAAMC,KAAKC,GCvBpBG,EAAc,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAMT,EAAT,EAASA,MAAOQ,EAAhB,EAAgBA,SAAhB,OAClB,sBAAKV,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,SACGE,IAGH,mBAAGF,UAAU,aAAb,SACGW,IAGH,cAAC,EAAD,CAAUD,SAAUA,QAcxBE,EAAYN,aAAe,CACzBI,SAAU,IAGGH,UAAMC,KAAKI,G,MCMXC,MA9Bf,WACE,MAA0BvB,mBAAS,IAAnC,mBAAOF,EAAP,KAAc0B,EAAd,KACA,EAAwBxB,mBAAS,MAAjC,mBAAOyB,EAAP,KAAa1B,EAAb,KAIA,OAFA2B,qBAAU,kBHVY,SAACF,GACvBtC,EAAQ,QAAS,CAAEyC,OAAQ,QACxBrC,MAAK,SAACC,GAAD,OAAciC,EAASjC,MGQfqC,CAASJ,KAAW,IAGlC,qCACE,wBAAQd,UAAU,cAAlB,SACE,oBAAIA,UAAU,aAAd,0BAGF,uBAAMA,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEZ,MAAOA,EACPC,QAASA,MAIb,qBAAKW,UAAU,eAAf,WACKe,GACD,cAAC,EAAD,eAAiBA,aCxB7BI,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.893399eb.chunk.js","sourcesContent":["const BASE_URL = 'https://bloggy-api.herokuapp.com/';\n\nconst request = (endPoint, options) => {\n  const url = BASE_URL + endPoint;\n\n  return fetch(url, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport default request;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getPost } from '../../Api/posts';\n\nimport './PostList.scss';\n\nconst PostList = ({ posts, setPost }) => {\n  const [postId, setPostId] = useState(0);\n\n  const handleClickOpen = (event) => {\n    const id = event.target.dataset.postId;\n\n    getPost(setPost, id);\n    setPostId(id);\n  };\n\n  const handleClickClose = () => {\n    setPost(null);\n    setPostId(0);\n  };\n\n  return (\n    <ul className=\"list\">\n      {posts.map(({ id, title }) => (\n        <li\n          className=\"list__item\"\n          key={id}\n        >\n          <h2>\n            {title}\n          </h2>\n\n          <button\n            data-post-id={id}\n            className=\"list__open-button\"\n            type=\"button\"\n            onClick={id === +postId ? handleClickClose : handleClickOpen}\n          >\n            {id === +postId ? 'close' : 'open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  })),\n  setPost: PropTypes.func.isRequired,\n};\n\nPostList.defaultProps = {\n  posts: [],\n};\n\nexport default React.memo(PostList);\n","/* eslint-disable import/prefer-default-export */\nimport request from './request';\n\nexport const getPosts = (setPosts) => {\n  request('posts', { method: 'GET' })\n    .then((response) => setPosts(response));\n};\n\nexport const getPost = (setPost, id) => {\n  request(`posts/${id}?_embed=comments`)\n    .then((response) => {\n      setPost(response);\n    });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comments = ({ comments }) => (\n  <>\n    <h3>Comments:</h3>\n    <ul className=\"comments\">\n      {comments.map(({ id, body }) => (\n        <li key={id}>\n          <p>{body}</p>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nComments.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    postId: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n  })),\n};\n\nComments.defaultProps = {\n  comments: [],\n};\n\nexport default React.memo(Comments);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comments from '../Comments/Comments';\n\nconst PostDetails = ({ body, title, comments }) => (\n  <div className=\"post\">\n    <h2 className=\"post__title\">\n      {title}\n    </h2>\n\n    <p className=\"post__body\">\n      {body}\n    </p>\n\n    <Comments comments={comments} />\n  </div>\n);\n\nPostDetails.propTypes = {\n  body: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    postId: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n  })),\n};\n\nPostDetails.defaultProps = {\n  comments: [],\n};\n\nexport default React.memo(PostDetails);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\n\nimport { getPosts } from './Api/posts';\nimport PostList from './components/PostList/PostList';\nimport PostDetails from './components/PostDetails/PostDetails';\n\nimport './App.scss';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState(null);\n\n  useEffect(() => getPosts(setPosts), []);\n\n  return (\n    <>\n      <header className=\"App__header\">\n        <h1 className=\"App__title\">Posts List</h1>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostList\n            posts={posts}\n            setPost={setPost}\n          />\n        </div>\n\n        <div className=\"App__details\">\n          {!!post && (\n            <PostDetails {...post} />\n          )}\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}